services:
  postgres:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    platform: linux/amd64
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 50
    platform: linux/amd64
    restart: unless-stopped

  analytics-db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: analytics
      POSTGRES_PASSWORD: analytics
      POSTGRES_DB: analytics
    volumes:
      - analytics-db-volume:/var/lib/postgresql/data
      - ./init_scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "analytics"]
      interval: 5s
      retries: 5
    platform: linux/amd64
    restart: unless-stopped

  airflow-init:
    image: apache/airflow:2.5.1-python3.9
    platform: linux/amd64
    depends_on:
      postgres:
        condition: service_healthy
      analytics-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY:-your_default_fernet_key}
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__WEBSERVER__SECRET_KEY=${FERNET_KEY:-your_default_fernet_key}
      - SQLALCHEMY_SILENCE_UBER_WARNING=1
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./config:/opt/airflow/config
      - ./requirements.txt:/requirements.txt
      - ./scripts:/opt/airflow/scripts
    command: >
      bash -c "
      pip install --upgrade pip &&
      pip install --no-cache-dir -r /requirements.txt &&
      /opt/airflow/scripts/wait_for_db.sh &&
      airflow db init &&
      (airflow users list | grep -q admin || 
       airflow users create \
        --username admin \
        --firstname Admin \
        --lastname User \
        --role Admin \
        --email admin@example.com \
        --password admin) &&
      airflow connections add \
        --conn-type postgres \
        --conn-host analytics-db \
        --conn-login analytics \
        --conn-password analytics \
        --conn-schema analytics \
        analytics_db || true &&
      python /opt/airflow/scripts/init_analytics_db.py
      "

  airflow-webserver:
    image: apache/airflow:2.5.1-python3.9
    platform: linux/amd64
    restart: always
    depends_on:
      - airflow-init
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./config/airflow.cfg:/opt/airflow/airflow.cfg
      - ./requirements.txt:/requirements.txt
      - ./scripts:/opt/airflow/scripts
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY:-your_default_fernet_key}
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=true
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__WEBSERVER__WORKERS=2
      - SQLALCHEMY_SILENCE_UBER_WARNING=1
    ports:
      - "8080:8080"
    command: >
      bash -c "
      pip install --upgrade pip &&
      pip install --no-cache-dir -r /requirements.txt &&
      /opt/airflow/scripts/wait_for_db.sh &&
      airflow webserver
      "
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 30s
      start_period: 30s
      retries: 5

  airflow-scheduler:
    image: apache/airflow:2.5.1-python3.9
    platform: linux/amd64
    restart: always
    depends_on:
      - airflow-init
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./config/airflow.cfg:/opt/airflow/airflow.cfg
      - ./requirements.txt:/requirements.txt
      - ./scripts:/opt/airflow/scripts
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY:-your_default_fernet_key}
      - AIRFLOW__SCHEDULER__MIN_FILE_PROCESS_INTERVAL=30
      - SQLALCHEMY_SILENCE_UBER_WARNING=1
    command: >
      bash -c "
      pip install --upgrade pip &&
      pip install --no-cache-dir -r /requirements.txt &&
      /opt/airflow/scripts/wait_for_db.sh &&
      airflow scheduler
      "

  airflow-worker:
    image: apache/airflow:2.5.1-python3.9
    platform: linux/amd64
    restart: always
    depends_on:
      - airflow-scheduler
      - redis
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./data:/opt/airflow/data
      - ./config/airflow.cfg:/opt/airflow/airflow.cfg
      - ./requirements.txt:/requirements.txt
      - ./scripts:/opt/airflow/scripts
    environment:
      - AIRFLOW__CELERY__WORKER_CONCURRENCY=4
      - AIRFLOW__CELERY__WORKER_PREFETCH_MULTIPLIER=1
      - AIRFLOW__CELERY__SYNC_PARALLELISM=1
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow
    command: >
      bash -c "
      if [ -f \"/requirements.txt\" ]; then
        pip install --no-cache-dir -r /requirements.txt
      fi &&
      until nc -zv redis 6379; do
        sleep 5;
      done &&
      celery --app airflow.executors.celery_executor.app worker \
        --queues=default \
        --concurrency=$${AIRFLOW__CELERY__WORKER_CONCURRENCY:-4} \
        --prefetch-multiplier=$${AIRFLOW__CELERY__WORKER_PREFETCH_MULTIPLIER:-1} \
        --loglevel=info
      "

volumes:
  postgres-db-volume:
  analytics-db-volume: